#include <Arduino_GFX_Library.h>
#include <GfxUi.h>
#include <ConcertOne_Regular9pt7b.h>

// Define pins for ST7735
#define TFT_CS 16    // Chip Select
#define TFT_RST 2    // Reset
#define TFT_DC 4     // Data/Command
#define TFT_MOSI 23  // MOSI (Data)
#define TFT_SCK 18   // Clock

// Initialize Arduino_GFX
Arduino_DataBus *bus = new Arduino_ESP32SPI(TFT_DC, TFT_CS, TFT_SCK, TFT_MOSI);
Arduino_GFX *gfx = new Arduino_ST7735(bus, TFT_RST, 1 /* rotation */, false /* IPS */, 128 /* width */, 160 /* height */, 0 /* col offset */, 0 /* row offset */, 0, 0, false);

GfxUi gfxui(gfx, 11, 11);

int count = 0;

void setup() {
  Serial.begin(115200);

  gfx->begin();
  gfx->setFont(&ConcertOne_Regular9pt7b);
  gfx->setTextWrap(false);

  gfx->fillScreen(BLACK);

  Serial.println(String(gfxui.strWidth("abcde")));
  Serial.println(String(gfxui.strHeight("abcde")));
}

void loop() {
  gfx->fillScreen(gfx->color565(0, 0, 0));

  // const uint16_t bitmap[] PROGMEM = {
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000,
  //   0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000,
  //   0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000,
  //   0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000,
  //   0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF,
  //   0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF,
  //   0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF,
  //   0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF,
  //   0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF,
  //   0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF,
  //   0x0000, 0xFFFF, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFFFF, 0x0000,
  //   0x0000, 0xFFFF, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFFFF, 0x0000,
  //   0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000,
  //   0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFE86, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  //   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  // };
  // const uint8_t bitmapMask[] PROGMEM = {
  //   0b00000000, 0b00000111, 0b11100000, 0b00000000,
  //   0b00000000, 0b00111111, 0b11111100, 0b00000000,
  //   0b00000000, 0b11111111, 0b11111111, 0b00000000,
  //   0b00000001, 0b11111111, 0b11111111, 0b10000000,
  //   0b00000111, 0b11111111, 0b11111111, 0b11100000,
  //   0b00001111, 0b11111111, 0b11111111, 0b11110000,
  //   0b00001111, 0b11111111, 0b11111111, 0b11110000,
  //   0b00011111, 0b11111111, 0b11111111, 0b11111000,
  //   0b00111111, 0b11111111, 0b11111111, 0b11111100,
  //   0b00111111, 0b11111111, 0b11111111, 0b11111100,
  //   0b01111111, 0b11111111, 0b11111111, 0b11111110,
  //   0b01111111, 0b11111111, 0b11111111, 0b11111110,
  //   0b01111111, 0b11111111, 0b11111111, 0b11111110,
  //   0b11111111, 0b11111111, 0b11111111, 0b11111111,
  //   0b11111111, 0b11111111, 0b11111111, 0b11111111,
  //   0b11111111, 0b11111111, 0b11111111, 0b11111111,
  //   0b11111111, 0b11111111, 0b11111111, 0b11111111,
  //   0b11111111, 0b11111111, 0b11111111, 0b11111111,
  //   0b11111111, 0b11111111, 0b11111111, 0b11111111,
  //   0b01111111, 0b11111111, 0b11111111, 0b11111110,
  //   0b01111111, 0b11111111, 0b11111111, 0b11111110,
  //   0b01111111, 0b11111111, 0b11111111, 0b11111110,
  //   0b00111111, 0b11111111, 0b11111111, 0b11111100,
  //   0b00111111, 0b11111111, 0b11111111, 0b11111100,
  //   0b00011111, 0b11111111, 0b11111111, 0b11111000,
  //   0b00001111, 0b11111111, 0b11111111, 0b11110000,
  //   0b00001111, 0b11111111, 0b11111111, 0b11110000,
  //   0b00000111, 0b11111111, 0b11111111, 0b11100000,
  //   0b00000001, 0b11111111, 0b11111111, 0b10000000,
  //   0b00000000, 0b11111111, 0b11111111, 0b00000000,
  //   0b00000000, 0b00111111, 0b11111100, 0b00000000,
  //   0b00000000, 0b00000111, 0b11100000, 0b00000000
  // };
  // gfx->draw16bitRGBBitmapWithMask(10, 10, bitmap, bitmapMask, 32, 32);

  // Draw text
  gfx->setTextColor(0xFFFF);
  gfx->setTextSize(0.5);
  gfx->setCursor(30, 0);
  gfx->println("0.5 " + String(count));

  gfx->setTextColor(0xFFFF);
  gfx->setTextSize(1);
  gfx->setCursor(30, 30);
  gfx->println("1 " + String(count));

  gfx->setTextColor(0xFFFF);
  gfx->setTextSize(2);
  gfx->setCursor(30, 80);
  gfx->println("2 " + String(count));


  gfxui.drawCanva(20, 20, 100, 30, 10, WHITE);

  count++;
  delay(500);
}